name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ORGA_NAME: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Skip Tests
      run: echo "Skipping tests step"

    - name: Vérifier que le secret LOGINDOCKER est valide
      run: |
        if [ -z "${{ secrets.LOGINDOCKER }}" ]; then
          echo "Erreur : le secret LOGINDOCKER est vide"
          exit 1
        else
          echo "Le secret LOGINDOCKER est valide"
        fi


    - name: Log in to GitHub Container Registry
      run: |
        echo ${{ secrets.LOGINDOCKER }} | docker login ghcr.io -u ${{ secrets.USER }} --password-stdin


    - name: Build Docker Image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.ORGA_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

    - name: Push Docker Image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.ORGA_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to server
      run: |
        echo "Deploying application..."
        # Commandes de déploiement spécifiques (ex. SSH, Kubernetes)
